<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <script src="https://kit.fontawesome.com/11d589870a.js" crossorigin="anonymous"></script>
    <link rel="stylesheet" href='/createquiz.css'>
    <link rel="stylesheet" href='/newquiz.css'>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Create Quiz</title>
</head>
<body>
    <%  var qno=0 %>
    <%- include('../views/header') %>
    <div class="content-container">
        <%- include('../views/sidebar',{select : "newquiz"}) %>
        <div class="container">
            <div class="author-details">
                <div class="quiz-name">
                    <div class="inside-label">Quiz name<span class="important">*</span></div>
                    <div class="input-field">
                        <input class="input qname" type="text" value="">
                        <div class="border"></div>
                    </div>
                </div>
                <div class="author-name">
                    <div class="inside-label">Author name<span class="important">*</span></div>
                    <div class="input-field">
                        <input class="input aname" type="text" value="">
                        <div class="border"></div>
                    </div>
                </div>
                <div class="author-email">
                    <div class="inside-label">Email<span class="important">*</span></div>
                    <div class="input-field">
                        <input class="input email" type="text" value="" onblur="validEmail(this.value)">
                        <div class="border"></div>
                    </div>
                </div>
                <div class="start-quiz">
                    <div class="inside-label">Start time<span class="important">*</span></div>
                    <div class="input-field">
                        <input class="input stime" type="datetime-local" value="">
                        <div class="border"></div>
                    </div>
                </div>
                <div class="end-quiz">
                    <div class="inside-label">End time<span class="important">*</span></div>
                    <div class="input-field">
                        <input class="input etime" type="datetime-local" value="">
                        <div class="border"></div>
                    </div>
                </div>
                <div class="submit">
                    <div class="button submit" onclick="create()">
                        <div class="button-label">Create</div>
                    </div>
                    <div class="button update-create" onclick="updateCreate()">
                        <div class="button-label">Update</div>
                    </div>
                </div>
            </div>
            <div class="question-creation">
                <div class="questions">
                    <div class="question-label">
                        Questions
                    </div>
                    <div class="question q<%=qno%>">
                        <div class="input-ques">
                            <input class="input ques q<%=qno%>" type="text" placeholder="Question" value="">
                            <div class="border"></div>
                        </div>
                        <div class="choices q<%=qno%>">
                            <div class="choices-label">
                                <div class="content">
                                    Choices
                                </div>
                                <div class="button add-option" id='<%=qno%>' onclick="addchoice(`<%=qno%>`)">
                                    <div class="button-label"><i class="fa fa-plus" aria-hidden="true"></i></div>
                                </div>
                                <div class="button add-option" id='<%=qno%>' onclick="removechoice(`<%=qno%>`)">
                                    <div class="button-label"><i class="fa fa-minus" aria-hidden="true"></i></div>
                                </div>
                            </div>
                            <div class="choice q<%=qno%>">
                                <input class="input ichoice q<%=qno%>" type="text" placeholder="option" value="" onblur="addanskey(`<%=qno%>`)">
                                <div class="border"></div>
                            </div>
                        </div>
                        <div class="info">
                            <div class="total-marks">
                                <div class="info-label">Marks</div>
                                <div>
                                    <input class="input info q<%=qno%>" type="number" placeholder="" value="" min="0">
                                    <div class="border"></div>
                                </div>
                            
                            </div>
                            <div class="negative"> 
                                <div class="info-label">Negative</div>
                                 <div>
                                    <input class="input info q<%=qno%>" type="number" placeholder="" value="0" min="0">
                                    <div class="border"></div>
                                 </div>
                            </div>
                            <div class="anskey"> 
                                <div class="info-label">Answer Key</div>
                                <div>
                                    <select class="input info q<%=qno%>"></select>
                                    <div class="border"></div>
                                </div>
                            </div>
                        </div>
                        <div class="options q<%=qno%>">
                            <div class="button add-ques q<%=qno%>" onclick="addQuestion(`<%=qno%>`)">
                                <div class="button-label"><i class="fa fa-plus" aria-hidden="true"></i></div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="new-ques">
                    <div class="button add-new" onclick="newquestion(`<%=qno%>`)">
                        <div class="button-label">New</div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <%- include('../views/footer') %>
</body>
<script>
    var quizid="609982913226e274080c1ac4"
    const validEmail=(email)=>{
        var mailformat = /^(?:[\w\!\#\$\%\&\'\*\+\-\/\=\?\^\`\{\|\}\~]+\.)*[\w\!\#\$\%\&\'\*\+\-\/\=\?\^\`\{\|\}\~]+@(?:(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9\-](?!\.)){0,61}[a-zA-Z0-9]?\.)+[a-zA-Z0-9](?:[a-zA-Z0-9\-](?!$)){0,61}[a-zA-Z0-9]?)|(?:\[(?:(?:[01]?\d{1,2}|2[0-4]\d|25[0-5])\.){3}(?:[01]?\d{1,2}|2[0-4]\d|25[0-5])\]))$/
        if(email.match(mailformat))
        {
            document.querySelector(".input.email").style.color='white'
            return true;
        }
        else
        {
            document.querySelector(".input.email").focus()
            document.querySelector(".input.email").style.color='red'
            return false;
        }
    }
    const create=async()=>{
        const url=`${window.location.origin}/api/create`
        const data={}
        data.name=document.querySelector('.input.qname').value
        data.author=document.querySelector('.input.aname').value
        data.authorEmail=document.querySelector('.input.email').value
        data.dot=new Date()
        data.stime=new Date(document.querySelector('.input.stime').value)
        data.etime=new Date(document.querySelector('.input.etime').value)
        for(x in data)
        {
            if(data[x]==="")
            {
                alert('Fill up the empty slots')
                return
            }
        }
        fetch(url,{
            method:'POST',
            headers: {
                'Content-Type': 'application/json;charset=utf-8'
            },
            body:JSON.stringify(data),
        })
            .then((Response)=>Response.json())
            .then((data)=>{
                console.log(data)
                if(data.status)
                    {
                        quizid=data.data._id
                        document.querySelector('.button.submit').style.display='none'
                        document.querySelector('.button.update-create').style.display='flex'
                        document.querySelector('.button.add-new').style.display='flex'
                        document.querySelector('.question-creation').style.display='block'
                        alert('Success')
                    }
                else
                {
                    alert('Failed')
                }
            })
    }
    const addanskey=(val)=>{
        var choices= document.getElementsByClassName(`input ichoice q${val}`)
        var anskey=document.getElementsByClassName(`input info q${val}`)[2]
        console.log(anskey)
        anskey.innerHTML=""
        for(i=0;i<choices.length;i++)
        {
            var option=new Option(choices[i].value,choices[i].value)
            option.style.color='black'
            anskey.add(option)
        }
    }

    const addchoice=(val)=>{
        var element=document.querySelector(`.choices.q${val}`)
        console.log(element)
        element.insertAdjacentHTML("beforeend",`<div class="choice q${val}">
                                <input class="input ichoice q${val}" type="text" placeholder="option" value="" onblur="addanskey(${val})" >
                                <div class="border"></div>
                            </div>`)
        var elefocus=document.getElementsByClassName(`input ichoice q${val}`)
        elefocus[elefocus.length-1].focus()
    }
    const removechoice=(val)=>{
        var element=document.getElementsByClassName(`choice q${val}`)
        if(element.length==0){return}
        element[element.length-1].remove()
        var elefocus=document.getElementsByClassName(`input ichoice q${val}`)
        if(elefocus.length==0){return}
        elefocus[elefocus.length-1].focus()
    }
    var val=1;
    const newquestion=()=>{
        document.querySelector('.questions').insertAdjacentHTML("beforeend",`<div class="question q${val}">
                        <div class="input-ques">
                            <input class="input ques q${val}" type="text" placeholder="Question" value="">
                            <div class="border"></div>
                        </div>
                        <div class="choices q${val}">
                            <div class="choices-label">
                                <div class="content">
                                    Choices
                                </div>
                                <div class="button add-option" id='${val}' onclick="addchoice(${val})">
                                    <div class="button-label"><i class="fa fa-plus" aria-hidden="true"></i></div>
                                </div>
                                <div class="button add-option" id='${val}' onclick="removechoice('${val}')">
                                    <div class="button-label"><i class="fa fa-minus" aria-hidden="true"></i></div>
                                </div>
                            </div>
                            <div class="choice q${val}">
                                <input class="input ichoice q${val}" type="text" placeholder="option" value="" onblur="addanskey(${val})">
                                <div class="border"></div>
                            </div>
                        </div>
                        <div class="info">
                            <div class="total-marks">
                                <div class="info-label">Marks</div>
                                <div>
                                    <input class="input info q${val}" type="number" placeholder="" value="" min="0">
                                    <div class="border"></div>
                                </div>
                            
                            </div>
                            <div class="negative"> 
                                <div class="info-label">Negative</div>
                                 <div>
                                    <input class="input info q${val}" type="number" placeholder="" value="0" min="0">
                                    <div class="border"></div>
                                 </div>
                            </div>
                            <div class="anskey"> 
                                <div class="info-label">Answer Key</div>
                                <div>
                                    <select class="input info q${val}"></select>
                                    <div class="border"></div>
                                </div>
                            </div>
                        </div>
                        <div class="options q${val}">
                            <div class="button add-ques q${val}" onclick="addQuestion(${val})">
                                <div class="button-label"><i class="fa fa-plus" aria-hidden="true"></i></div>
                            </div>
                        </div>
                    </div>`)
                    document.querySelector(`.input.ques.q${val}`).focus()   
                    val++

    }
    const addQuestion= async (val)=>{
        var data={}
        data.ques=document.querySelector(`.input.ques.q${val}`).value
        var choices= document.getElementsByClassName(`input ichoice q${val}`)
        var options=[]
        for(i=0;i<choices.length;i++)
        {
            options.push(choices[i].value)
        }
        data.options=options
        var info=document.getElementsByClassName(`input info q${val}`)
        data.marks=Number(info[0].value)
        data.negative=Number(info[1].value)
        data.answer=info[2].value
        data.quizId=quizid
        data.isNegative=false
        if(data.negative>0)
        {
            data.isNegative=true
        }
        const url=`${window.location.origin}/api/create/${quizid}`
        await fetch(url,{
            method:'POST',
            headers: {
                'Content-Type': 'application/json;charset=utf-8'
            },
            body:JSON.stringify(data),
        }).then((Response)=>Response.json())
        .then((back)=>{
            if(back.status)
            {
                document.getElementsByClassName(`options q${val}`)[0].innerHTML=` <div class="button add-ques q${val}" onclick="editQuestion(${val})">
                                <div class="button-label"><i class="fa fa-pen" aria-hidden="true"></i></div>
                            </div>`
                document.getElementsByClassName(`question q${val}`)[0].id=back.data._id
            }
            else
            {
                alert('Question unable to upload.\nTry again!!!')
            }
        })
        console.log(data)        
    }
    const editQuestion= async (val)=>{
        var data={}
        data.ques=document.querySelector(`.input.ques.q${val}`).value
        var choices= document.getElementsByClassName(`input ichoice q${val}`)
        var options=[]
        for(i=0;i<choices.length;i++)
        {
            options.push(choices[i].value)
        }
        data.options=options
        var info=document.getElementsByClassName(`input info q${val}`)
        data.marks=Number(info[0].value)
        data.negative=Number(info[1].value)
        data.answer=info[2].value
        data.quizId=quizid
        data.isNegative=false
        if(data.negative>0)
        {
            data.isNegative=true
        }
        for (x in data)
        {
            if(data[x]==='')
            {
                alert('Fill up the empty slots')
                return
            }
            
        }
        console.log(data)
        const qid=document.querySelector(`.question.q${val}`).id
        const url=`${window.location.origin}/api/question/${qid}`
        await fetch(url,{
            method:'PATCH',
            headers: {
                'Content-Type': 'application/json;charset=utf-8'
            },
            body:JSON.stringify(data),
        })
        .then((Response)=>Response.json())
        .then((back)=>{
            if(!back.status)
                console.log('Cannot Update. Try Again!!')
        })
    }  
    const updateCreate=()=>{
        const data={}
        data.name=document.querySelector('.input.qname').value
        data.author=document.querySelector('.input.aname').value
        data.authorEmail=document.querySelector('.input.email').value
        data.stime=new Date(document.querySelector('.input.stime').value)
        data.etime=new Date(document.querySelector('.input.etime').value)
        for(x in data)
        {
            if(data[x]==="")
            {
                alert('Fill up the empty slots')
                return
            }
        }
        console.log(data)
        const url=`${window.location.origin}/api/create/${quizid}`
        fetch(url,{
            method:'PATCH',
            headers: {
                'Content-Type': 'application/json;charset=utf-8'
            },
            body:JSON.stringify(data),
        })
            .then((Response)=>Response.json())
            .then((data)=>{
                console.log(data)
                if(data.status)
                    {
                        alert('Updated')
                    }
                else
                {
                    alert('Cannot update')
                }
            })
    }
</script>
</html>